<script>
  // Auto-refresh for pending statuses
  document.addEventListener('DOMContentLoaded', function() {
    const currentStatus = '<%= status.status %>'.toLowerCase();
    const isPending = ['pending', 'processing', 'installing'].includes(currentStatus);
    
    console.log('📊 Current status:', currentStatus);
    console.log('⏳ Is pending:', isPending);
    
    // Manual refresh button handler - Her zaman çalışmalı
    const refreshButtons = document.querySelectorAll('[data-action="refresh"], .btn-secondary');
    
    refreshButtons.forEach(btn => {
      if (btn.textContent.includes('Refresh')) {
        console.log('🔄 Setting up refresh button:', btn);
        
        btn.addEventListener('click', function(e) {
          e.preventDefault();
          
          console.log('🔄 Refresh button clicked');
          
          // Button'u disable et ve loading state göster
          this.disabled = true;
          this.style.opacity = '0.6';
          this.style.cursor = 'not-allowed';
          
          const originalHTML = this.innerHTML;
          this.innerHTML = '<span class="btn-icon">⏳</span> Refreshing...';
          
          // Kısa delay sonra sayfayı yenile
          setTimeout(() => {
            window.location.reload();
          }, 500);
        });
      }
    });
    
    if (isPending) {
      console.log('📡 Status is pending, setting up auto-refresh...');
      
      let refreshCount = 0;
      const maxRefreshes = 10; // Maximum 10 refreshes (5 minutes)
      
      const refreshTimer = setInterval(() => {
        refreshCount++;
        
        if (refreshCount >= maxRefreshes) {
          clearInterval(refreshTimer);
          console.log('⏰ Auto-refresh stopped after maximum attempts');
          
          // Manual refresh'e vurgu yap
          const manualRefreshBtn = document.querySelector('.btn-secondary');
          if (manualRefreshBtn) {
            manualRefreshBtn.style.background = '#fbbf24';
            manualRefreshBtn.style.color = '#92400e';
            manualRefreshBtn.style.border = '1px solid #f59e0b';
            manualRefreshBtn.innerHTML = '<span class="btn-icon">🔄</span> Manual Refresh Required';
          }
          return;
        }
        
        console.log(`🔄 Auto-refreshing... (${refreshCount}/${maxRefreshes})`);
        window.location.reload();
        
      }, 30000); // Refresh every 30 seconds
      
      // Auto-refresh indicator ekle
      const statusActions = document.querySelector('.status-actions');
      if (statusActions) {
        const indicator = document.createElement('div');
        indicator.className = 'auto-refresh-indicator';
        indicator.style.cssText = `
          text-align: center;
          margin-top: 16px;
          padding: 12px;
          background: #fef3c7;
          color: #92400e;
          border-radius: 8px;
          font-size: 14px;
          font-weight: 500;
          border: 1px solid #fde68a;
        `;
        
        const updateIndicator = () => {
          indicator.innerHTML = `
            <span style="animation: pulse 2s infinite;">⏳</span>
            Auto-refreshing every 30 seconds... (${refreshCount}/${maxRefreshes})
            <br><small>or click "Refresh Status" for manual update</small>
          `;
        };
        
        updateIndicator();
        statusActions.after(indicator);
        
        // Update counter every second
        setInterval(updateIndicator, 1000);
      }
    }
  });
  
  // Alternative: Global refresh function
  window.refreshStatus = function() {
    console.log('🔄 Global refresh function called');
    
    const btn = document.querySelector('[data-action="refresh"]');
    if (btn) {
      btn.disabled = true;
      btn.style.opacity = '0.6';
      btn.innerHTML = '<span class="btn-icon">⏳</span> Refreshing...';
    }
    
    setTimeout(() => {
      window.location.reload();
    }, 300);
  };
  
  // Debug function - Browser console'da test için
  window.testRefresh = function() {
    console.log('🧪 Test refresh function');
    console.log('Button elements:', document.querySelectorAll('button'));
    console.log('Refresh button:', document.querySelector('[data-action="refresh"]'));
    refreshStatus();
  };
</script><%- include('partials/header', {title: 'Purchase Status', user: locals.user}) %>

<div class="page-header">
  <h1 class="page-title">Purchase Status</h1>
  <p class="page-subtitle">Track your eSIM activation progress</p>
</div>

<div class="status-container">
  <!-- Main Status Card -->
  <div class="status-main-card">
    <div class="status-header">
      <div class="status-icon-large">
        <% if (status.status === 'completed') { %>
          <span class="status-emoji success">✅</span>
        <% } else if (status.status === 'pending') { %>
          <span class="status-emoji pending">⏳</span>
        <% } else if (status.status === 'failed') { %>
          <span class="status-emoji failed">❌</span>
        <% } else { %>
          <span class="status-emoji processing">🔄</span>
        <% } %>
      </div>
      <div class="status-info">
        <h2 class="status-title">
          <% if (status.status === 'completed') { %>
            eSIM Ready to Use
          <% } else if (status.status === 'pending') { %>
            Processing Your eSIM
          <% } else if (status.status === 'failed') { %>
            Activation Failed
          <% } else { %>
            <%= status.status %>
          <% } %>
        </h2>
        <p class="status-description">
          <% if (status.status === 'completed') { %>
            Your eSIM has been successfully activated and is ready to use
          <% } else if (status.status === 'pending') { %>
            Your eSIM is being prepared. This usually takes a few minutes
          <% } else if (status.status === 'failed') { %>
            There was an issue activating your eSIM. Please contact support
          <% } else { %>
            Current status: <%= status.status %>
          <% } %>
        </p>
      </div>
    </div>

    <div class="status-details">
      <div class="detail-grid">
        <div class="detail-card">
          <span class="detail-icon">🆔</span>
          <div class="detail-content">
            <span class="detail-label">Transaction ID</span>
            <span class="detail-value"><%= status.transactionId %></span>
          </div>
        </div>

        <div class="detail-card">
          <span class="detail-icon">📦</span>
          <div class="detail-content">
            <span class="detail-label">Offer ID</span>
            <span class="detail-value"><%= status.offerId %></span>
          </div>
        </div>

        <div class="detail-card">
          <span class="detail-icon">🏢</span>
          <div class="detail-content">
            <span class="detail-label">Provider</span>
            <span class="detail-value"><%= status.brandName %></span>
          </div>
        </div>

        <div class="detail-card">
          <span class="detail-icon">🌍</span>
          <div class="detail-content">
            <span class="detail-label">Country</span>
            <span class="detail-value"><%= status.country %></span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Plan Details -->
  <div class="plan-details-card">
    <h3 class="card-title">Plan Details</h3>
    <div class="plan-specs">
      <div class="spec-row">
        <span class="spec-icon">📅</span>
        <span class="spec-label">Duration:</span>
        <span class="spec-value"><%= status.durationDays %> days</span>
      </div>
      
      <div class="spec-row">
        <span class="spec-icon">📊</span>
        <span class="spec-label">Data:</span>
        <span class="spec-value">
          <%= status.dataUnlimited ? 'Unlimited' : status.dataGB + ' GB' %>
        </span>
      </div>
    </div>
  </div>

  <!-- Activity Log -->
  <% if (status.log && status.log.length > 0) { %>
    <div class="activity-log-card">
      <h3 class="card-title">Activity Log</h3>
      <div class="activity-timeline">
        <% status.log.forEach((entry, index) => { %>
          <div class="timeline-item <%= index === 0 ? 'timeline-current' : '' %>">
            <div class="timeline-marker">
              <% if (entry.status === 'completed') { %>
                <span class="marker-icon success">✅</span>
              <% } else if (entry.status === 'pending') { %>
                <span class="marker-icon pending">⏳</span>
              <% } else if (entry.status === 'failed') { %>
                <span class="marker-icon failed">❌</span>
              <% } else { %>
                <span class="marker-icon">🔄</span>
              <% } %>
            </div>
            <div class="timeline-content">
              <div class="timeline-status"><%= entry.status %></div>
              <div class="timeline-message"><%= entry.statusMessage %></div>
              <div class="timeline-time"><%= entry.dateTime %></div>
            </div>
          </div>
        <% }) %>
      </div>
    </div>
  <% } %>

  <!-- Actions -->
  <div class="status-actions">
    <% if (isQrReady) { %>
      <a href="/qrcode/<%= status.transactionId %>" class="btn-primary btn-large">
        <span class="btn-icon">📱</span>
        Download QR Code
      </a>
    <% } else { %>
      <button class="btn-disabled btn-large" disabled title="QR code will be available when eSIM is ready">
        <span class="btn-icon">⏳</span>
        QR Code (Not Ready)
      </button>
    <% } %>
    
    <button onclick="location.reload()" class="btn-secondary btn-large" data-action="refresh">
      <span class="btn-icon">🔄</span>
      Refresh Status
    </button>
    
    <a href="/purchases" class="btn-outline btn-large">
      <span class="btn-icon">👈</span>
      Back to My eSIMs
    </a>
  </div>

  <!-- Debug Info (development only) -->
  <% if (typeof dbStatus !== 'undefined') { %>
    <div class="debug-status" style="margin-top: 24px; padding: 16px; background: #f0f9ff; border: 1px solid #bae6fd; border-radius: 8px; font-family: monospace; font-size: 12px;">
      <strong>🔍 Debug Info:</strong><br>
      Database Status: "<%= dbStatus %>"<br>
      API Status: "<%= status.status %>"<br>
      QR Ready: <%= isQrReady ? 'Yes ✅' : 'No ❌' %><br>
      <% if (typeof updatedAt !== 'undefined') { %>
        Last Check: <%= updatedAt %><br>
      <% } %>
      <% if (typeof apiError !== 'undefined' && apiError) { %>
        <span style="color: #dc2626;">⚠️ API Error - Showing DB data</span><br>
      <% } %>
      Status Match: <%= dbStatus === status.status ? 'Yes ✅' : 'No (Updated) 🔄' %>
    </div>
  <% } %>
</div>

<%- include('partials/footer') %>